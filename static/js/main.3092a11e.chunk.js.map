{"version":3,"sources":["loader.svg","components/Card.jsx","components/Cardlist.jsx","components/Searchbox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","robot","random","Math","floor","className","src","id","alt","name","email","Cardlist","fromApp","loading","data","length","logo","map","SearchBox","placeholder","handleChange","onChange","type","App","useState","setRobot","search","setSearch","setLoading","useEffect","a","timeout","setTimeout","fetch","res","json","fetchData","dataFilter","filter","x","toLowerCase","includes","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAAe,MAA0B,mC,OCgB1BA,EAdD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAENC,EAASC,KAAKC,MAAM,EAAoB,EAAhBD,KAAKD,UAEnC,OACI,sBAAKG,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BL,EAAMM,GAAhC,mBAA6CL,EAA7C,iBAAoEM,IAAI,OAChF,6BAAKP,EAAMQ,OACX,4BAAIR,EAAMS,YCWPC,EAfE,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAElC,OAAKD,GAA2B,IAAhBC,EAAKC,OAKjB,qBAAKV,UAAWQ,EAAUG,EAAO,YAAjC,SACKH,EAAU,qBAAKP,IAAKU,EAAMR,IAAI,SAC3BI,EAAQK,KAAI,SAAAH,GAAI,OAAI,cAAC,EAAD,CAAoBb,MAAOa,GAAhBA,EAAKP,SANrC,6CCQAW,EAbG,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC7B,OACI,uBACAf,UAAU,aACVc,YAAaA,EACbE,SAAUD,EACVE,KAAK,YC2CEC,EA/CH,WAAO,IAAD,EAEUC,mBAAS,IAFnB,mBAETvB,EAFS,KAEFwB,EAFE,OAGYD,mBAAS,IAHrB,mBAGTE,EAHS,KAGDC,EAHC,OAIcH,oBAAS,GAJvB,mBAITX,EAJS,KAIAe,EAJA,KAOhBC,qBAAU,YAEO,uCAAG,4BAAAC,EAAA,6DAEVC,EAAUC,WAAU,sBAAC,8BAAAF,EAAA,sEACPG,MAAM,8CADC,cACnBC,EADmB,gBAENA,EAAIC,OAFE,OAEnBrB,EAFmB,OAGzBW,EAASX,GACTc,GAAW,GAJc,2CAMxB,KARa,kBAUTG,GAVS,2CAAH,qDAafK,KAEC,IAEH,IAKMC,EAAapC,EAAMqC,QAAO,SAAAC,GAAC,OAAIA,EAAE9B,KAAK+B,cAAcC,SAASf,EAAOc,kBAC1E,OACE,sBAAKnC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEc,YAAY,WACZC,aAXe,SAAC,GAAgB,IAAdsB,EAAa,EAAbA,OACtBf,EAAUe,EAAOC,UAahB,cAAC,EAAD,CAAU/B,QAASyB,EAAYxB,QAASA,EAASC,KAAMuB,QClC7CO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3092a11e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loader.669e4000.svg\";","import './../index.css'\r\n\r\n const Card = ({robot}) => {\r\n\r\n    const random = Math.floor(1 + Math.random() * 4)\r\n\r\n    return (\r\n        <div className='card-container'>\r\n            <img src={`https://robohash.org/${robot.id}?set=set${random}&size=180x180`} alt=\"ss\"/>\r\n            <h1>{robot.name}</h1>\r\n            <p>{robot.email}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n\r\n","import './../index.css'\r\nimport logo from '../loader.svg'\r\n\r\nimport Card from './Card'\r\n\r\n\r\nconst Cardlist = ({ fromApp, loading, data }) => {\r\n    \r\n    if (!loading && data.length === 0) {\r\n        return <h1> Not find </h1>\r\n    }\r\n\r\n    return (\r\n        <div className={loading ? logo : 'card-list'}  >\r\n            {loading ? <img src={logo} alt=\"logo\" /> :\r\n                fromApp.map(data => <Card key={data.id} robot={data} />)}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Cardlist\r\n","\r\n\r\nimport './../index.css'\r\n\r\nconst SearchBox = ({placeholder, handleChange }) => {\r\n    return (\r\n        <input\r\n        className='search-box'\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n        type='search'\r\n      />\r\n\r\n    )\r\n \r\n}\r\n\r\nexport default SearchBox","import React, { useState, useEffect } from 'react'\r\nimport Cardlist from './components/Cardlist'\r\nimport SearchBox from './components/Searchbox'\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [robot, setRobot] = useState([])\r\n  const [search, setSearch] = useState('')\r\n  const [loading, setLoading] = useState(true)\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchData = async () => {\r\n\r\n      const timeout = setTimeout(async () => {\r\n        const res = await fetch('https://jsonplaceholder.typicode.com/users')\r\n        const data = await res.json();\r\n        setRobot(data)\r\n        setLoading(false)\r\n\r\n      }, 2000);\r\n\r\n      return timeout\r\n    }\r\n\r\n    fetchData()\r\n\r\n  }, [])\r\n\r\n  const handleChange = ({ target }) => {\r\n    setSearch(target.value)\r\n  }\r\n\r\n  //* search has been update with setSEARCH\r\n  const dataFilter = robot.filter(x => x.name.toLowerCase().includes(search.toLowerCase()))\r\n  return (\r\n    <div className=\"App\">\r\n      <h1> Robot Database </h1>\r\n      <SearchBox\r\n        placeholder='cari apa'\r\n        handleChange={handleChange}\r\n      />\r\n\r\n     <Cardlist fromApp={dataFilter} loading={loading} data={dataFilter}/>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}