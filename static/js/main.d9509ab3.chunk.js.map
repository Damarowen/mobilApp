{"version":3,"sources":["components/Card.jsx","components/Cardlist.jsx","components/Searchbox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","random","Math","floor","className","src","mobil","id","alt","name","email","Cardlist","fromApp","length","map","x","Searchbox","placeholder","berubah","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","dataFilter","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAGaA,G,KAAO,SAACC,GAEjB,IAAMC,EAASC,KAAKC,MAAM,EAAoB,EAAhBD,KAAKD,UAEnC,OACI,sBAAKG,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BL,EAAMM,MAAMC,GAAtC,mBAAmDN,EAAnD,iBAA0EO,IAAI,OACtF,6BAAKR,EAAMM,MAAMG,OACjB,4BAAIT,EAAMM,MAAMI,aCPfC,EAAW,SAACX,GAGrB,OACI,qBAAKI,UAAU,YAAf,SACNJ,EAAMY,QAAQC,OAAS,EAAIb,EAAMY,QAAQE,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAiBT,MAAOS,GAAbA,EAAER,OAH7C,6CCOLS,MATf,YAAgD,IAA1BC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,QAC/B,OACQ,uBAAOd,UAAU,SAEbe,KAAK,SAASF,YAAaA,EAAaG,SAAUF,KC2CnDG,G,wDAvCb,aAAe,IAAD,8BACZ,gBAeFD,SAAW,SAACE,GAEV,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAftC,EAAKC,MAAQ,CACXrB,MAAO,GACPkB,YAAa,IALH,E,gEAUO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEjB,MAAO0B,S,+BAQhC,IAAD,EAEwBC,KAAKN,MAA5BrB,EAFD,EAECA,MAAOkB,EAFR,EAEQA,YACTU,EAAa5B,EAAM6B,QAAO,SAAApB,GAAC,OAAIA,EAAEN,KAAK2B,cAAcC,SAASb,EAAYY,kBAC/E,OACE,sBAAKhC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEa,YAAY,WACZC,QAASe,KAAKb,WAGhB,cAAC,EAAD,CAAUR,QAASsB,W,GAlCTI,cCCHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.d9509ab3.chunk.js","sourcesContent":["\r\nimport './index.css'\r\n\r\nexport const Card = (props) => {\r\n\r\n    const random = Math.floor(1 + Math.random() * 4)\r\n\r\n    return (\r\n        <div className='card-container'>\r\n            <img src={`https://robohash.org/${props.mobil.id}?set=set${random}&size=180x180`} alt=\"ss\"/>\r\n            <h1>{props.mobil.name}</h1>\r\n            <p>{props.mobil.email}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import './index.css'\r\nimport { Card } from './Card'\r\n\r\n\r\nexport const Cardlist = (props) => {\r\n\r\n    const noQuery = \" Sorry , cant find what you looking for\"\r\n    return (\r\n        <div className='card-list'>\r\n {props.fromApp.length > 0 ? props.fromApp.map(x => <Card key={x.id} mobil={x}/>) : noQuery }\r\n           \r\n           \r\n        </div>\r\n    )\r\n}\r\n","import './index.css'\r\n\r\n\r\n\r\nfunction Searchbox ({ placeholder, berubah })  {\r\n    return (\r\n            <input className='search'\r\n                //* placeholder dynamic\r\n                type=\"search\" placeholder={placeholder} onChange={berubah} />\r\n\r\n    )\r\n}\r\n\r\nexport default Searchbox\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\n//* below is using destructured\r\nimport { Cardlist } from './components/Cardlist'\r\n\r\n//* below is using export function\r\nimport Searchbox from './components/Searchbox'\r\n\r\nimport './App.css'\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      mobil: [],\r\n      searchField: ''\r\n    }\r\n  }\r\n\r\n  //* ini akan jalan setelah constructor dan render phase\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(res => res.json())\r\n      .then(users => this.setState({ mobil: users }))\r\n  }\r\n\r\n  onChange = (e) => {\r\n    //* this merujuk ke App\r\n    this.setState({ searchField: e.target.value })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { mobil, searchField } = this.state\r\n    const dataFilter = mobil.filter(x => x.name.toLowerCase().includes(searchField.toLowerCase()))\r\n    return (\r\n      <div className=\"App\">\r\n        <h1> Robot Database </h1>\r\n        <Searchbox\r\n          placeholder='cari apa'\r\n          berubah={this.onChange}\r\n\r\n        />\r\n        <Cardlist fromApp={dataFilter} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}